{% include 'bpmn_representation.jinja2' %}

{% include 'bpmn_examples.jinja2' %}

---

# Process editing functions

- `delete_element(element_id)`
- `redirect_branch(branch_condition, next_id)`
- `add_element(element, before_id=None, after_id=None)`
- `move_element(element_id, before_id=None, after_id=None)`
- `update_element(new_element)`

1. `delete_element` - Deletes an element from the process.

**Parameters:**
- `element_id`: The id of an existing element in the process

2. `redirect_branch` - Redirects the flow of a branch in an exclusive gateway.

**Parameters:**
- `branch_condition`: The condition of the branch to be redirected (needs to match the condition in the process)
- `next_id`: The id of the next element to which the flow should be redirected

3. `add_element` - Adds a new element to the process.

**Parameters:**
- `element`: An object representing a new element to be added to the process
- `before_id`: (Optional) The id of the element before which the new element should be added
- `after_id`: (Optional) The id of the element after which the new element should be added

**Note:** Only one of `before_id` or `after_id` should be provided.

4. `move_element` - Moves an existing element to a new position in the process.

**Parameters:**
- `element_id`: The id of an existing element in the process
- `before_id`: (Optional) The id of the element before which the element should be moved
- `after_id`: (Optional) The id of the element after which the element should be moved

**Note:** Only one of `before_id` or `after_id` should be provided.

5. `update_element` - Updates an existing element in the process.

**Parameters:**
- `new_element`: An object representing the updated element

**Note:** The `new_element`'s id should match the id of the element to be updated.

---

# Example function calls

```json
{
  "function": "update_element",
  "arguments": {
      "new_element": {
          "type": "task",
          "id": "task1", // the id of the element to be updated
          "label": "New task description"
      }
  }
}
```

```json
{
  "function": "add_element",
  "arguments": {
    "element": {
          "type": "task",
          "id": "newTaskId",
          "label": "New task description"
    },
    "before_id": "task1"
  }
}
```

```json
{
  "function": "add_element",
  "arguments": {
    "element": {
      "type": "parallelGateway",
      "id": "parallel1",
      "branches": [
        [
          {
            "type": "task",
            "id": "docTask1",
            "label": "Review document"
          },
        ],
        [
          {
            "type": "serviceTask",
            "id": "notifyTask1",
            "label": "Send email notification"
          },
        ]
      ]
    },
    "after_id": "task5"
  }
}
```

```json
{
  "function": "delete_element",
  "arguments": {
    "element_id": "exclusive2"
  }
}
```

```json
{
  "function": "redirect_branch",
  "arguments": {
    "branch_condition": "Product is out of stock",
    "next_id": "task3"
  }
}
```

---

# The JSON representation of the process

```json
{{ process }}
```

# The requested change to the process

```
{{ change_request }}
```

Provide one function at a time to update the process, along with the arguments for the function call.

Start with the first function call.