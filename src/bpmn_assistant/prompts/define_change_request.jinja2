{% include 'bpmn_representation.jinja2' %}

{% include 'bpmn_examples.jinja2' %}

---

# Process editing functions

- `delete_element(element_id)`
- `redirect_branch(branch_condition, next_id)`
- `add_element(element, before_id=None, after_id=None)`
- `move_element(element_id, before_id=None, after_id=None)`
- `update_element(new_element)`

**Important:** All changes must result in a valid BPMN model, following the patterns shown in the examples above.

1. `delete_element` - Deletes an element from the process.

**Parameters:**
- `element_id`: The id of an existing element in the process

2. `redirect_branch` - Redirects the flow of a branch in an exclusive gateway.

**Parameters:**
- `branch_condition`: The condition of the branch to be redirected (needs to match the condition in the process)
- `next_id`: The id of the next element to which the flow should be redirected

3. `add_element` - Adds a new element to the process.

**Parameters:**
- `element`: An object representing a new element to be added to the process
- `before_id`: (Optional) The id of the element before which the new element should be added
- `after_id`: (Optional) The id of the element after which the new element should be added

**Note:** Only one of `before_id` or `after_id` should be provided. When adding a gateway, you must define all the elements within the gateway.

4. `move_element` - Moves an existing element to a new position in the process.

**Parameters:**
- `element_id`: The id of an existing element in the process
- `before_id`: (Optional) The id of the element before which the element should be moved
- `after_id`: (Optional) The id of the element after which the element should be moved

**Note:** Only one of `before_id` or `after_id` should be provided.

5. `update_element` - Updates an existing element in the process.

**Parameters:**
- `new_element`: An object representing the updated element

**Note:** The `new_element`'s id should match the id of the element to be updated.

---

# Current process

{{ process }}

# Message history

{{ message_history }}

The last user message indicates that the user wants to make a modification to the process.

Based on the last user message, construct a **concise** change request.

The change request should include:
1. A short natural language description of the change.
2. A breakdown of exactly which functions should be called to implement the change, specifying the required arguments for each function call.